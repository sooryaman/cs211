#include<stdio.h>
#include<stdlib.h>
typedef struct node{
  int val;
 struct node* next;
}node;

//struct node* duplicate(node* head);
struct node* new(int data, node* head);
struct node* delete(int data, node* head);
struct node* sortLL(node* head);
void freeList(node* head){
  struct node* temp=head;
  while(temp!=NULL){
    struct node* temp2=temp;
    temp=temp->next;
   free(temp2);
  }
  
}

int isNull(node* head);

node* duplicate( node* head){
  struct node* p1=head;
  struct node* p2=head->next;
   struct node* prev=p1;
   while(!isNull(p1)){
     p2=p1->next;
     prev=p1;
     while(!isNull(p2)){
	   if(p1->val==p2->val){
	     prev->next=p2->next;

	   }
	   prev=p2;
	   p2=p2->next;
	 }
      p1=p1->next;
   }
	 
   return head;
}
node* sortLL(node* head){
   struct node* p1;
   struct node* p2;
   struct node* p3=head;
  int x;
  while (!isNull(p3)){
    p1=p3->next;
    p2=p3;
    while(!isNull(p1)){
      if(p1->val<p2->val){
	p2=p1;
      }
      p1=p1->next;
    }
    x =p3->val;
    p3->val=p2->val;
    p2->val=x;
    p3=p3->next;
  }
  return head;
}
node* delete(int data ,node* head){
  
   struct node* prev=head;
  if(isNull(head)){
    return head;
  }
 struct node* p1=head->next;
  if(head->val==data){
    if(isNull(head->next)){
	head=head->next;
	return head;
      }
      head=head->next;
      }
  while(!isNull(p1)){

  if(data==p1->val){
    prev->next=p1->next;
  }
  prev=p1;
  p1=p1->next;
  }
  return head;
}


struct node* new(int data, node* head){
  struct node* new=malloc(sizeof(node));
  new->val=data;
  new->next=head;
  return new;
}


int main(int argc, char** argv){
  FILE* fp=fopen(argv[1],"r");
  //  struct node* ptr= NULL;
  struct node* head= NULL;
  if(fp==NULL){
    printf("error\n");
    return 0;
  } 
  char operation;
  int number;
  while (fscanf(fp,"%c\t%d\n",&operation,&number)!=EOF){
    if(operation=='d'){
       head=delete(number,head);
       // printf("%c\t%d",operation, number);
    }
    if(operation=='i'){
      head =new(number,head); 
       duplicate(head);
      
      // printf("%c\t%d",operation, number);

    }
  }
  int count=0;
  struct node* ctr=head;
  if(isNull(ctr)){
     printf("%d\n",count);
   return 0;
   }
    while(!isNull(ctr)){
    count++;
    ctr=ctr->next;
  }
  printf("%d\n",count);
   head=duplicate(head);
   head=sortLL(head);
   struct node* print=head;
  while(print!=NULL){
    printf("%d\t",print->val);
    print=print->next;
  }
  printf("\n");
  
  
  fclose(fp);
  return 0;
}
int isNull(node* head){
  if(head==NULL){
    return 1;
  }

  return 0;
}

 




